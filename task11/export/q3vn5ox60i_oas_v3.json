{
  "openapi": "3.0.1",
  "info": {
    "title": "task11_api",
    "version": "2024-09-18T03:56:49Z",
    "description": "API for managing restaurant reservations and tables."
  },
  "servers": [
    {
      "url": "https://q3vn5ox60i.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/signup": {
      "post": {
        "summary": "User Signup",
        "description": "Register a new user for the restaurant reservation system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signup successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or missing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "User Signin",
        "description": "Sign in a user to the restaurant reservation system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signin successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid credentials or missing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "Fetch available tables",
        "description": "Retrieve the list of available tables.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tables successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TablesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create table reservation",
        "description": "Reserve a table at the restaurant.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableReservationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Table reservation successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableReservationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or missing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{tableId}": {
      "get": {
        "summary": "Fetch table details",
        "description": "Retrieve details of a specific table by its ID.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Table details successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid table ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reservations": {
      "post": {
        "summary": "Create a new reservation",
        "description": "Make a new reservation at the restaurant.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reservation successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch all reservations",
        "description": "Retrieve a list of all reservations.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of reservations successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code."
          },
          "message": {
            "type": "string",
            "description": "Error message."
          }
        }
      },
      "SignupRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name of the user."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user."
          },
          "password": {
            "type": "string",
            "pattern": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$%^*])[A-Za-z\\d$%^*]{12,}$",
            "description": "Password with alphanumeric characters and at least one of $%^*, minimum length 12."
          }
        }
      },
      "SigninRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email."
          },
          "password": {
            "type": "string",
            "pattern": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$%^*])[A-Za-z\\d$%^*]{12,}$",
            "description": "User's password with alphanumeric characters and at least one of $%^*, minimum length 12."
          }
        }
      },
      "SigninResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "JWT token for authentication."
          }
        }
      },
      "TablesResponse": {
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the table."
                },
                "number": {
                  "type": "integer",
                  "description": "Table number."
                },
                "places": {
                  "type": "integer",
                  "description": "Number of places at the table."
                },
                "isVip": {
                  "type": "boolean",
                  "description": "Indicates if the table is in the VIP hall."
                },
                "minOrder": {
                  "type": "integer",
                  "description": "Minimum order (deposit) required to reserve the table.",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "TableReservationRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the table."
          },
          "number": {
            "type": "integer",
            "description": "Table number."
          },
          "places": {
            "type": "integer",
            "description": "Number of places at the table."
          },
          "isVip": {
            "type": "boolean",
            "description": "Indicates if the table is in the VIP hall."
          },
          "minOrder": {
            "type": "integer",
            "description": "Minimum order (deposit) required to reserve the table.",
            "nullable": true
          }
        }
      },
      "TableReservationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the created table reservation."
          }
        }
      },
      "TableDetailsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the table."
          },
          "number": {
            "type": "integer",
            "description": "Table number."
          },
          "places": {
            "type": "integer",
            "description": "Number of places at the table."
          },
          "isVip": {
            "type": "boolean",
            "description": "Indicates if the table is in the VIP hall."
          },
          "minOrder": {
            "type": "integer",
            "description": "Minimum order (deposit) required to reserve the table.",
            "nullable": true
          }
        }
      },
      "ReservationRequest": {
        "type": "object",
        "properties": {
          "tableNumber": {
            "type": "integer",
            "description": "Table number."
          },
          "clientName": {
            "type": "string",
            "description": "Client's name."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Client's phone number."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Reservation date (yyyy-MM-dd)."
          },
          "slotTimeStart": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Reservation start time (HH:MM)."
          },
          "slotTimeEnd": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Reservation end time (HH:MM)."
          }
        }
      },
      "ReservationResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the reservation."
          }
        }
      },
      "ReservationsResponse": {
        "type": "object",
        "properties": {
          "reservations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tableNumber": {
                  "type": "integer",
                  "description": "Table number."
                },
                "clientName": {
                  "type": "string",
                  "description": "Client's name."
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Client's phone number."
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Reservation date (yyyy-MM-dd)."
                },
                "slotTimeStart": {
                  "type": "string",
                  "description": "Reservation start time (HH:MM)."
                },
                "slotTimeEnd": {
                  "type": "string",
                  "description": "Reservation end time (HH:MM)."
                }
              }
            }
          }
        }
      }
    }
  }
}
